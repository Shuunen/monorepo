#!/bin/bash

# fedora start
if [ -f /etc/bashrc ]; then # source global definitions
  . /etc/bashrc
fi

if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]; then # ensure local bin directories are in PATH
  PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH # export PATH

if [ -d ~/.bashrc.d ]; then
  for rc in ~/.bashrc.d/*; do
    if [ -f "$rc" ]; then
      . "$rc"
    fi
  done
fi
unset rc # clear variable
# fedora end

# debian start
case $- in # if not running interactively, don't do anything
*i*) ;;
*) return ;;
esac

HISTCONTROL=ignoreboth # don't put duplicate lines or lines starting with space in the history.
shopt -s histappend    # append to the history file, don't overwrite it
HISTSIZE=1000          # set the maximum number of lines in the history file
HISTFILESIZE=2000
shopt -s checkwinsize # check the window size after each command and, if necessary, update the values of LINES and COLUMNS.

if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
  # set variable identifying the chroot you work in (used in the prompt below)
  debian_chroot=$(cat /etc/debian_chroot)
fi

case "$TERM" in # set a fancy prompt
xterm-color | *-256color) color_prompt=yes ;;
esac

if [ "$color_prompt" = yes ]; then
  PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
  PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi

case "$TERM" in
xterm* | rxvt*)
  PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
  ;;
esac

if [ -x /usr/bin/dircolors ]; then
  # enable color support of ls and also add handy aliases
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'
  alias grep='grep --color=auto'
fi

# alert alias for long running commands. Use like so : sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

if [ -f ~/.bash_aliases ]; then
  # shellcheck disable=SC1090
  . ~/.bash_aliases
fi

if ! shopt -oq posix; then
  # enable programmable completion features
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
# debian end

# nvm
if test -r ~/.nvm; then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
fi

# bun
if test -r ~/.bun; then
  export BUN_INSTALL="$HOME/.bun"
  export PATH="$BUN_INSTALL/bin:$PATH"
fi

# pnpm
export PNPM_HOME="$HOME/.local/share/pnpm"
case ":$PATH:" in
*":$PNPM_HOME:"*) ;;
*) export PATH="$PNPM_HOME:$PATH" ;;
esac

# go
test -r /usr/local/go/bin && export PATH=$PATH:/usr/local/go/bin
test -r ~/go/bin && export PATH=$PATH:~/go/bin

# pyenv
if test -r ~/.pyenv; then
  export PYENV_ROOT="$HOME/.pyenv"
  command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
fi

echo ''
# neofetch
echo ' Hey sweet-pie <3 have a nice day !'
echo ''
